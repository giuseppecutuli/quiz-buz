/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as _authRouteImport } from './routes/__auth'
import { Route as _authIndexRouteImport } from './routes/__auth.index'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const _authRoute = _authRouteImport.update({
  id: '/__auth',
  getParentRoute: () => rootRouteImport,
} as any)
const _authIndexRoute = _authIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => _authRoute,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/': typeof _authIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/': typeof _authIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/__auth': typeof _authRouteWithChildren
  '/login': typeof LoginRoute
  '/__auth/': typeof _authIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/login' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/'
  id: '__root__' | '/__auth' | '/login' | '/__auth/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  _authRoute: typeof _authRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__auth': {
      id: '/__auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _authRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__auth/': {
      id: '/__auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof _authIndexRouteImport
      parentRoute: typeof _authRoute
    }
  }
}

interface _authRouteChildren {
  _authIndexRoute: typeof _authIndexRoute
}

const _authRouteChildren: _authRouteChildren = {
  _authIndexRoute: _authIndexRoute,
}

const _authRouteWithChildren = _authRoute._addFileChildren(_authRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  _authRoute: _authRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
